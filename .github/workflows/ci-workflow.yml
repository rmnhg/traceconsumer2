name: build and test CI workflow
on: [push]
env:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 14
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '14'
    - name: Build project with Maven
      run: mvn -B compile --file pom.xml
  verify-and-package:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 14
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: 14
    - name: Run all defined tests and generate war with Maven
      run: mvn -B verify --file pom.xml
    -
        name: Login to GHCR.IO
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: "rmnhg"
          password: ${{ secrets.PAT }}
    -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/rmnhg/traceconsumer2:latest
  deploy:
    needs: verify-and-package
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: actions/checkout@v3
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCLOUD_SA }}'
    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v1'
      with:
        cluster_name: 'apsv-22'
        location: 'us-central1'

    # The KUBECONFIG env var is automatically exported and picked up by kubectl.
    - id: 'deployment-kafka'
      run: 'kubectl apply -f kafka-deployment.yaml'
    -  run: 'kubectl wait deployment/kafka --for condition=available --timeout=300s'
    -  run: 'kubectl get pods'
    - id: 'deployment-mypod'
      run: 'kubectl create secret docker-registry github-registry --docker-server="ghcr.io" --docker-username="rmnhg" --docker-password="${{ secrets.PAT }}" --docker-email="${{ secrets.email }}" -o yaml --dry-run=client | kubectl apply -f -'
    - run: 'kubectl apply -f deployment.yaml'
    - run: 'kubectl get deployments'
    - run: 'kubectl get pods'